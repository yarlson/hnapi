name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          check-latest: true
          cache: true

      # Linting steps
      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "Go fmt found formatting issues in the following files:"
            gofmt -l .
            echo "Run 'go fmt ./...' to fix them"
            exit 1
          fi
        shell: bash

      - name: Run go vet
        run: go vet ./...

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
          # Only print new issues in the PR
          only-new-issues: true

      # Build step
      - name: Build
        run: go build ./...

      # Test step with coverage
      - name: Test with coverage
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          fail_ci_if_error: false
